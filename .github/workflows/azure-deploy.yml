name: Build and deploy Node.js app to Azure Web App - profileserviceShell

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Configure npm for GitHub packages
        run: |
          echo "@membership:registry=https://npm.pkg.github.com" >> .npmrc
          echo "@projectShell:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
      - name: Install dependencies
        run: npm ci

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Verify Node.js configuration files
        run: |
          echo "=== Checking Node.js version files ==="
          if [ -f .nvmrc ]; then
            echo ".nvmrc content: $(cat .nvmrc)"
          else
            echo "WARNING: .nvmrc file not found!"
          fi
          if [ -f package.json ]; then
            echo "package.json engines:"
            grep -A2 '"engines"' package.json || echo "No engines field found"
          fi

      - name: Configure Node.js version in Azure App Service
        run: |
          # Try to set Node version - resource group name may vary
          az webapp config appsettings set \
            --name profileserviceShell \
            --settings WEBSITE_NODE_DEFAULT_VERSION=~20 \
            2>&1 || echo "Note: Could not set via CLI (may need manual setup in Azure Portal)"

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "profileserviceShell"
          slot-name: "Production"
          package: .
